default:
  ms1:
    apiVersion: flink.k8s.io/v1alpha1
    kind: FlinkDeployment
    metadata:
      name: ecds-carrieragg4g-graph
      namespace: gulv-dev-aggregator
    spec:  
      image: gulv-space-rtt-docker-np.oneartifactoryci.verizon.com/build-images/rttflink:9c38a804
      flinkVersion: v1_17  
      flinkConfiguration:
        taskmanager.numberOfTaskSlots: "10"
        heartbeat.timeout: "50000"
        taskmanager.memory.task.off-heap.size: "128m"
        taskmanager.memory.jvm-metaspace.size: "1024m"
        restart-strategy.type: exponential-delay
        restart-strategy.exponential-delay.backoff-multiplier: "2.0"
        restart-strategy.exponential-delay.initial-backoff: "1 s"
        restart-strategy.exponential-delay.jitter-factor: "0.1"
        restart-strategy.exponential-delay.max-backoff: "5 min"
        restart-strategy.exponential-delay.reset-backoff-threshold: "30 min"
        # # Example of override flags for frequently changing parameters
        # taskmanager.numberOfTaskSlots.override: true
        # heartbeat.timeout.override: true
        # taskmanager.memory.task.off-heap.size.override: true
        # restart-strategy.type.override: true
      serviceAccount: flink
      podTemplate:
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            app: 4ggraph
          name: 4ggraph
        spec:
          containers:
            - name: flink-main-container
              imagePullPolicy: Always
              volumeMounts:
                - name: kafka-certs
                  mountPath: /certs/cospd3-kafkacert.pem
                  subPath: cospd3-kafkacert.pem
              envFrom:
                - configMapRef:
                    name: flink-aggregator-dev
                - secretRef:
                    name: flink-aggregator-dev
              env:
                - name: FLINK_JOB_NAME
                  value: "ecds-carrieragg4g-graph"
          volumes:
            - name: kafka-certs
              secret:
                secretName: kafka-certs
                defaultMode: 420
      jobManager:
        resource:
          memory: "2048m"
          cpu: 1
      taskManager:
        resource:
          memory: "15G"
          cpu: 1
      job:
        jarURI: local:///opt/flink/usrlib/flinkaggregator-bundled-0.1.jar
        entryClass: "com.vzw.aggregator.Aggregator_v2"
        args: ["--inputJson", "/flink-json-configs/ECDS/4G/ecds-carrierkpis-4g-graph.json"]
        parallelism: 100
        upgradeMode: stateless
      logConfiguration:
        "log4j-console.properties": |
          rootLogger.level = WARN
          rootLogger.appenderRef.console.ref = LogConsole
          appender.console.name = LogConsole
          appender.console.type = CONSOLE
          appender.console.layout.type = PatternLayout
          appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
          logger.akka.name = akka
          logger.akka.level = WARN
          logger.kafka.name= org.apache.kafka
          logger.kafka.level = WARN
          logger.hadoop.name = org.apache.hadoop
          logger.hadoop.level = WARN
          logger.zookeeper.name = org.apache.zookeeper
          logger.zookeeper.level = WARN
          logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
          logger.netty.level = OFF

  ms2:
    apiVersion: flink.apache.org/v1beta1
    kind: FlinkDeployment
    metadata:
      name: ecds-carrieragg4g-killerue
      namespace: gulv-dev-aggregator
    spec:
      image: gulv-space-rtt-docker-np.oneartifactoryci.verizon.com/space-rtt-foa/rttflink:dev
      flinkVersion: v1_18  
      flinkConfiguration:
        taskmanager.numberOfTaskSlots: "1"
        heartbeat.timeout: "50000"
        taskmanager.memory.task.off-heap.size: "128m"
        taskmanager.memory.jvm-metaspace.size: "1024m"
        restart-strategy.type: exponential-delay
        restart-strategy.exponential-delay.backoff-multiplier: "2.0"
        restart-strategy.exponential-delay.initial-backoff: "1 s"
        restart-strategy.exponential-delay.jitter-factor: "0.1"
        restart-strategy.exponential-delay.max-backoff: "5 min"
        restart-strategy.exponential-delay.reset-backoff-threshold: "30 min"
      serviceAccount: flink
      podTemplate:
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            app: ecds4gkillerue
          name: ecds4gkillerue
        spec:
          containers:
            - name: flink-main-container
              imagePullPolicy: Always
              volumeMounts:
                - name: kafka-certs
                  mountPath: /certs/cospd3-kafkacert.pem
                  subPath: cospd3-kafkacert.pem
              envFrom:
                - configMapRef:
                    name: aggregator-common
                - secretRef:
                    name: aggregator-common
              env:
                - name: FLINK_JOB_NAME
                  value: "ecds-carrieragg4g-killerue"
          volumes:
            - name: kafka-certs
              secret:
                secretName: kafka-certs
                defaultMode: 420
      jobManager:
        resource:
          memory: "2048m"
          cpu: 1
      taskManager:
        resource:
          memory: "5g"
          cpu: 1
      job:
        jarURI: local:///opt/flink/usrlib/flinkaggregator-bundled-0.1.jar
        entryClass: "com.vzw.aggregator.Aggregator_v2"
        args: ["--inputJson", "/flink-json-configs/ECDS/4G/ecds-carrierkpis-4g-killerue.json"]
        parallelism: 1
        upgradeMode: stateless
      logConfiguration:
        "log4j-console.properties": |
          rootLogger.level = WARN
          rootLogger.appenderRef.console.ref = LogConsole
          appender.console.name = LogConsole
          appender.console.type = CONSOLE
          appender.console.layout.type = PatternLayout
          appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
          logger.akka.name = akka
          logger.akka.level = WARN
          logger.kafka.name= org.apache.kafka
          logger.kafka.level = WARN
          logger.hadoop.name = org.apache.hadoop
          logger.hadoop.level = WARN
          logger.zookeeper.name = org.apache.zookeeper
          logger.zookeeper.level = WARN
          logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
          logger.netty.level = OFF
