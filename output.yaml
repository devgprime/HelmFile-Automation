---
# Source: aggregator/charts/aggregator_5g/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod
  labels:
    app: 
    chart: aggregator_5g-0.4.9
    release: release-name
    heritage: Helm
spec:
  accessModes:
      - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: px-csi-repl2-delete
  volumeMode: Filesystem
---
# Source: aggregator/charts/aggregator_5g/templates/flinkdeployment.yaml
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod
  namespace: gulv-dev-aggregator
spec:
  image: gulv-space-rtt-docker-np.oneartifactoryci.verizon.com/space-rtt-foa/rttflink:dev:13d9f715
  imagePullPolicy: IfNotPresent
  flinkVersion: v1_18
  ingress:
    annotations:
      route.openshift.io/termination: edge  
    template: "aggregator_5g-0.4.9.gulv-dev-aggregator.apps.nsos-h4xv-cosp-dev3.nss.vzwnet.com"
  
  # mode: native
  serviceAccount: flink
  restartNonce: 1

  job:
    args:
    - --inputJson
    - /flink-json-configs/MNI/4G/mni-carrierkpis-4g-alarms.json
    entryClass: com.vzw.aggregator.Aggregator_v2
    jarURI: local:///opt/flink/usrlib/flinkaggregator-bundled-0.1.jar
    parallelism: 24
    upgradeMode: stateless

  logConfiguration:
    "log4j-console.properties": |
      appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
      appender.console.layout.type = PatternLayout
      appender.console.name = LogConsole
      appender.console.type = CONSOLE
      logger.akka.level = INFO
      logger.akka.name = akka
      logger.hadoop.level = INFO
      logger.hadoop.name = org.apache.hadoop
      logger.kafka.level = INFO
      logger.kafka.name = org.apache.kafka
      logger.netty.level = false
      logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
      logger.zookeeper.level = INFO
      logger.zookeeper.name = org.apache.zookeeper
      rootLogger.appenderRef.console.ref = LogConsole
      rootLogger.level = INFO

  flinkConfiguration:
    ### User provided configuration
    # flinkConfiguration must be map of str: str.
    # Iterate through and quote the values, in case they look like integers.
    execution.checkpointing.interval: "1min"
    execution.checkpointing.min-pause: "2ms"
    execution.checkpointing.unaligned: "true"
    heartbeat.timeout: "50000"
    high-availability.storageDir: "/app/flink"
    high-availability.type: "KUBERNETES"
    job.autoscaler.catch-up.duration: "5m"
    job.autoscaler.enabled: "true"
    job.autoscaler.metrics.window: "3m"
    job.autoscaler.restart.time: "2m"
    job.autoscaler.scaling.enabled: "true"
    job.autoscaler.stabilization.interval: "1m"
    job.autoscaler.target.utilization: "0.6"
    job.autoscaler.target.utilization.boundary: "0.2"
    kubernetes.jobmanager.cpu: "0.2"
    kubernetes.jobmanager.cpu.limit-factor: "5.0"
    kubernetes.taskmanager.cpu: "1"
    kubernetes.taskmanager.cpu.limit-factor: "20"
    metrics.reporter.prom.factory.class: "org.apache.flink.metrics.prometheus.PrometheusReporterFactory"
    rest.flamegraph.enabled: "true"
    restart-strategy.exponential-delay.backoff-multiplier: "2.0"
    restart-strategy.exponential-delay.initial-backoff: "1 s"
    restart-strategy.exponential-delay.jitter-factor: "0.1"
    restart-strategy.exponential-delay.max-backoff: "5 min"
    restart-strategy.exponential-delay.reset-backoff-threshold: "30 min"
    restart-strategy.type: "exponential-delay"
    state.checkpoint-storage: "filesystem"
    state.checkpoints.dir: "file:///app/flink-data/checkpoints_dir"
    state.savepoints.dir: "file:///app/flink-data/savepoints_dir"
    taskmanager.memory.jvm-metaspace.size: "1024m"
    taskmanager.memory.managed.size: "2gb"
    taskmanager.memory.task.heap.size: "10gb"
    taskmanager.memory.task.off-heap.size: "128m"
    taskmanager.numberOfTaskSlots: "4"
    user.artifacts.base-dir: "/tmp"
    web.cancel.enable: "true"
    web.rescale.enable: "true"

  # Use podTemplate to add WMF labels and annotations to all pods.
  # https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-main/docs/custom-resource/pod-template/
  podTemplate:
    apiVersion: v1
    kind: Pod
    metadata:
      labels:
        app: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod
      name: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod  
      annotations:        
        elastic.co/namespace: nts_np_gulv
    spec:
      containers:
        - name: flink-main-container
          imagePullPolicy: Always
          securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              capabilities:
                  drop: ["ALL"]
              seccompProfile:
                  type: RuntimeDefault
              readOnlyRootFilesystem: true
          env:
            - name: MNI_KAFKA_ROLLUP_TOPIC_4G
              valueFrom:
                configMapKeyRef:
                  key: MNI_CT_KAFKA_ROLLUP_TOPIC_4G
                  name: aggregator-common
            - name: REGION
              valueFrom:
                configMapKeyRef:
                  key: REGION_CT
                  name: aggregator-common
          envFrom:
            - configMapRef:
                name: aggregator-common
            - secretRef:
                name: aggregator-common # end env
          volumeMounts:
            - mountPath: /certs/
              name: kafka-certs
            - mountPath: /app/flink
              name: ha-directory
              readOnly: false
            - mountPath: /tmp
              name: tmpfs # end flink-main-container

      volumes:
        - name: kafka-certs
          secret:
            defaultMode: 420
            secretName: kafka-certs
        - name: ha-directory
          persistentVolumeClaim:
            claimName: gulv-aggregator-ha
        - emptyDir: {}
          name: tmpfs # end spec

  jobManager:
    replicas: 2
    resource:
      cpu: 1
      memory: 2048m

  taskManager:
    resource:
      cpu: 2
      memory: 15G
---
# Source: aggregator/charts/aggregator_6g/templates/flinkdeployment.yaml
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: ecds-carrieragg4g-region-prod
  namespace: gulv-dev-aggregator
spec:
  image: gulv-space-rtt-docker-np.oneartifactoryci.verizon.com/space-rtt-foa/rttflink:f9ebf657:13d9f715
  imagePullPolicy: IfNotPresent
  flinkVersion: v1_18
  ingress:
    annotations:
      route.openshift.io/termination: edge  
    template: "aggregator_6g-0.4.9.gulv-dev-aggregator.apps.nsos-h4xv-cosp-dev3.nss.vzwnet.com"
  
  # mode: native
  serviceAccount: flink
  restartNonce: 1

  job:
    args:
    - --inputJson
    - /flink-json-configs/MNI/4G/mni-carrierkpis-4g-alarms.json
    entryClass: com.vzw.aggregator.Aggregator_v2
    jarURI: local:///opt/flink/usrlib/flinkaggregator-bundled-0.1.jar
    parallelism: 24
    upgradeMode: stateless

  logConfiguration:
    "log4j-console.properties": |
      appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
      appender.console.layout.type = PatternLayout
      appender.console.name = LogConsole
      appender.console.type = CONSOLE
      logger.akka.level = INFO
      logger.akka.name = akka
      logger.hadoop.level = INFO
      logger.hadoop.name = org.apache.hadoop
      logger.kafka.level = INFO
      logger.kafka.name = org.apache.kafka
      logger.netty.level = false
      logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
      logger.zookeeper.level = INFO
      logger.zookeeper.name = org.apache.zookeeper
      rootLogger.appenderRef.console.ref = LogConsole
      rootLogger.level = INFO

  flinkConfiguration:
    ### User provided configuration
    # flinkConfiguration must be map of str: str.
    # Iterate through and quote the values, in case they look like integers.
    heartbeat.timeout: "50000"
    high-availability.storageDir: "/app/flink"
    high-availability.type: "KUBERNETES"
    job.autoscaler.catch-up.duration: "5m"
    job.autoscaler.enabled: "true"
    job.autoscaler.metrics.window: "3m"
    job.autoscaler.restart.time: "2m"
    job.autoscaler.scaling.enabled: "true"
    job.autoscaler.stabilization.interval: "1m"
    job.autoscaler.target.utilization: "0.6"
    job.autoscaler.target.utilization.boundary: "0.2"
    kubernetes.jobmanager.cpu: "0.2"
    kubernetes.jobmanager.cpu.limit-factor: "5.0"
    kubernetes.taskmanager.cpu: "1"
    kubernetes.taskmanager.cpu.limit-factor: "20"
    metrics.reporter.prom.factory.class: "org.apache.flink.metrics.prometheus.PrometheusReporterFactory"
    restart-strategy.exponential-delay.backoff-multiplier: "2.0"
    restart-strategy.exponential-delay.initial-backoff: "1 s"
    restart-strategy.exponential-delay.jitter-factor: "0.1"
    restart-strategy.exponential-delay.max-backoff: "5 min"
    restart-strategy.exponential-delay.reset-backoff-threshold: "30 min"
    restart-strategy.type: "exponential-delay"
    s3.endpoint: "http://s3-nswest.nss.vzwnet.com"
    s3.path.style.access: "true"
    taskmanager.memory.jvm-metaspace.size: "1024m"
    taskmanager.memory.task.off-heap.size: "128m"
    taskmanager.numberOfTaskSlots: "10"

  # Use podTemplate to add WMF labels and annotations to all pods.
  # https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-main/docs/custom-resource/pod-template/
  podTemplate:
    apiVersion: v1
    kind: Pod
    metadata:
      labels:
        app: ecds-carrieragg4g-region-prod
      name: ecds-carrieragg4g-region-prod  
      annotations:        
        elastic.co/namespace: nts_np_gulv
    spec:
      containers:
        - name: flink-main-container
          imagePullPolicy: Always
          securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              capabilities:
                  drop: ["ALL"]
              seccompProfile:
                  type: RuntimeDefault
              readOnlyRootFilesystem: true
          env:
            - name: MNI_KAFKA_ROLLUP_TOPIC_4G
              valueFrom:
                configMapKeyRef:
                  key: MNI_CT_KAFKA_ROLLUP_TOPIC_4G
                  name: aggregator-common
            - name: REGION
              valueFrom:
                configMapKeyRef:
                  key: REGION_CT
                  name: aggregator-common
          envFrom:
            - configMapRef:
                name: aggregator-common
            - secretRef:
                name: aggregator-common # end env
          volumeMounts:
            - mountPath: /certs/
              name: kafka-certs
            - mountPath: /app/flink
              name: ha-directory
              readOnly: false
            - mountPath: /tmp
              name: tmpfs # end flink-main-container

      volumes:
        - name: kafka-certs
          secret:
            defaultMode: 420
            secretName: kafka-certs
        - name: ha-directory
          persistentVolumeClaim:
            claimName: gulv-aggregator-ha
        - emptyDir: {}
          name: tmpfs # end spec

  jobManager:
    replicas: 2
    resource:
      cpu: 1
      memory: 2048m

  taskManager:
    resource:
      cpu: 2
      memory: 15G
---
# Source: aggregator/charts/aggregator_5g/templates/podmonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod
  labels:
    app: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod
    chart: aggregator_5g-0.4.9
    release: release-name
    heritage: Helm
spec:
  namespaceSelector:
    matchNames:
      - gulv-dev-aggregator
  podMetricsEndpoints:
    - path: /metrics
      relabelings:
        - action: replace
          replacement: '$1:9249'
          sourceLabels:
            - __meta_kubernetes_pod_ip
          targetLabel: __address__
  selector:
    matchLabels:
      app: ecds-pnw-carrierkpi-4g-killerue-screen-twelve-prod
---
# Source: aggregator/charts/aggregator_6g/templates/podmonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: ecds-carrieragg4g-region-prod
  labels:
    app: ecds-carrieragg4g-region-prod
    chart: aggregator_6g-0.4.9
    release: release-name
    heritage: Helm
spec:
  namespaceSelector:
    matchNames:
      - gulv-dev-aggregator
  podMetricsEndpoints:
    - path: /metrics
      relabelings:
        - action: replace
          replacement: '$1:9249'
          sourceLabels:
            - __meta_kubernetes_pod_ip
          targetLabel: __address__
  selector:
    matchLabels:
      app: ecds-carrieragg4g-region-prod
